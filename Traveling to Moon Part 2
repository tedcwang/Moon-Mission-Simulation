launchday=10 #day to launch
rinitial=6.4e6 #initial distance of rocket from center of earth
earthrocketdist=5*1.5e7 #distance from moon considered a success
vinitial=5e1 #initial speed of rocket
v = vinitial*norm(vec(2, -3, 0)) #initial velocity of rocket; change the direction only

#pos and vel generated by http://ssd.jpl.nasa.gov/horizons.cgi
# May 18, 2017
moonpos=1000*vec(2.760923425146916E+05,-2.747040388588842E+05,0)
moonvel=1000*vec(6.508987492563607E-01,7.285244988677730E-01,0)
earthpos=1000*vec(-3.395946002084490E+03,3.378869815882885E+03,0)
earthvel=1000*vec(-8.006078637191145E-03,-8.960878222180214E-03,0)

# Constants
AU=1000*149597871 # AU in m
G=6.67384e-11   # Gravitational constant

# Diameters used for drawing the moon and earth (not to scale)
Dearth=0.001*AU   # Earth diameter
Dmoon=0.0002*AU   # Moon diameter

#mass
Mearth=5.972e24
Mmoon=7.34767309e22
Mrocket=1.4690e4   

#time
day=24*3600
dt=2*3600
t=0

#set up 3D scene
scene = display(width=430, height=400, userspin=True, userzoom=True)
scene.append_to_title("""<br>Click the simulation to begin.""")
scene.append_to_title("""<br><br>Assumptions include:""")
scene.append_to_title("""<br>1. The rocket's speed near Earth's surface is 12 km/s, relative to Earth.""")
scene.append_to_title("""<br>2. The velocity of the rocket at an altitude of 2 earth radii is 5 km/s in the direction shown by the arrow.""")
scene.append_to_title("""<br>3. The thrusters are off during the entire flight. The net force on the rocket is the gravitational force by the Earth and the Moon.<br><br>""")

#scales for arrows
scale1=Dearth

# set up 3D objects
moon=sphere(dispay=scene, pos=moonpos, radius=Dmoon/2, color=color.white)
earth=sphere(dispay=scene, pos=earthpos, radius=Dearth/2, color=color.blue)
rocket=sphere(pos=moon.pos+rinitial*norm(v), radius=earth.radius/5, color=color.orange)
rocketarrow1=arrow(dispay=scene, pos=moon.pos, axis=scale1*norm(v), color=color.white)

# create trails
moontrail=attach_trail(moon, radius=0.2*Dmoon, trail_type="points", interval=2, retain=1000)
rockettrail=attach_trail(rocket, radius=0.2*rocket.radius, trail_type="points", interval=2, retain=1000)
rockettrail.stop

#create strings and labels
tstr="Time: {:.0f} days".format(0)
tlabel=label(pos=vector(0,1.2*mag(moonpos),0), text=tstr)
launchstr="Starting Date: May 18, 2017. \n"+launchday+" days until launch. \n Click to Run."
launchlabel=label(pos=vector(0,-1.2*mag(moonpos),0), text=launchstr)

#set the range
scene.range=2*mag(moonpos)

#this function is called when the rocket is launched
# it sets booleans and sets the initial velocitiy and momentum of the rocket
def launchRocket():
    global vrocket, procket, rocketLaunched, justNowLaunched
    rocketLaunched=True
    justNowLaunched=True
    vrocket=earthvel+v
    procket=Mrocket*vrocket

# initial positions, velocities, and momenta of all objects
earth.pos=earthpos
rocket.pos=moonpos
vearth=earthvel
vrocket=moonvel+v
moon.pos=moonpos
vmoon=moonvel
pmoon=Mmoon*vmoon
procket=Mrocket*vrocket

#booleans
rocketLaunched=False
run = False
justNowLaunched=False

# pause and then change the message
scene.waitfor('click')
launchstr="Launch Day "+launchday
launchlabel.text=launchstr


while True:
        rate(25)

      
        #moon - makes the moon sphere orbit the earth 
        p=moon.pos-earth.pos
        pmag=mag(p)
        punit=norm(p)
        Fmoon=-G*(Mearth*Mmoon/pmag**2*punit)   # Newton's law of gravitation
        pmoon=pmoon+Fmoon*dt
        moon.pos=moon.pos+pmoon/Mmoon*dt
        
        #rocket
        if(rocketLaunched):
          # Earth
            rocketarrow1.visible=False
            p=rocket.pos-earth.pos
            pmag=mag(p)
            punit=norm(p)
            Frocket_earth=(-G*Mrocket*Mearth)/(pmag**2)*punit   # Newton's law of gravitation
          # Moon
            p2=rocket.pos-moon.pos
            p2mag=mag(p2)
            p2unit=norm(p2)
            Frocket_moon=(-G*Mrocket*Mmoon)/(p2mag**2)*p2unit   # Newton's law of gravitation
          


# launched, then compute Fnet, procket, and rocket.pos
        if(rocketLaunched):
            rocketarrow1.visible=False


            #compute Fnet, procket, and rocket.pos
            Fnet=Frocket_earth+Frocket_moon
            procket=procket+Fnet*dt
            rocket.pos=rocket.pos+procket/Mrocket*dt
            if(justNowLaunched):
                justNowLaunched=False
#########

            if(justNowLaunched):
                justNowLaunched=False
        #if not launched, just make the rocket at earth's position + its initial distance in the direction of its velocity
        else:
            rocket.pos=moon.pos+rinitial*norm(v)

        #rocketarrow
        rocketarrow1.pos=rocket.pos

        #update time and label
        t=t+dt
        tstr="Time: {:.0f} days".format(t/day)
        tlabel.text=tstr

        #launch rocket on the launch day        
        if(t/day>launchday and rocketLaunched==false):
            launchRocket()
        
        #arrival at the Moon
        if(mag(rocket.pos-earth.pos)<earthrocketdist):
            launchstr="Arrived on Earth. \nTravel time = {:.0f} days".format(t/day)
            launchlabel.text=launchstr
            scene.waitfor('click')
            
